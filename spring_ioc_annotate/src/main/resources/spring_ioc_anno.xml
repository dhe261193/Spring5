<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--Spring 提供注解
        @Controller //控制器，推荐给Controller层添加此注解
        @Service    //业务逻辑，推荐给业务逻辑层添加此注解
        @Repository //仓库管理，推荐给数据访问层添加此注解
        @Component  //给不属于以上基层的类添加此注解
        不是一定每个层都要对应相应的注解；这样做是为了： 1.提高代码可读性  2.利于Spring管理
    -->

    <!--扫描包
        base-packgae  设置需要扫描的包
        context:exclude-filter  设置需要排除扫描的选项
        context:include-filter  设置需要包含的选项
            type： 1.annotation   默认  根据注解的完整限定名设置排除或包含
                    2.assignable     根据类的完整限定名设置排除或包含
                    3.aspectj        根据切面表达式设置排除或包含 一般不用
                    4.regex          根据正则表达式设置排除或包含 一般不用
                    5.customer       根据接口设置排除或包含 一般不用
        use-default-filters  默认true，默认扫描包含@Controller  @Service  @Repository  @Component
                             设置false，不扫描包含@Controller  @Service  @Repository  @Component
    -->
    <context:component-scan base-package="com.lazy"/>

    <!--
        使用注解注册一个bean的步骤：
            1.设置扫描包的路径
            2.在对应类上加上对应的注解
        使用上面的注解会自动把类名首字母转为小写，设为bean的名字
    -->

    <!--引用外部配置文件，可以使用@Value注解获取值-->
    <context:property-placeholder location="db.properties"/>


</beans>